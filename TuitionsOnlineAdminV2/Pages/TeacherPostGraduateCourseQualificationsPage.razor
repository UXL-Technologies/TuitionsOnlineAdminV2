@page "/TeacherPostGraduateCourseQualification"
@*Authors: Shravan A, Bhavya MU, Sneha M , Karan Kumar , Bhargavi S Adiga
    Date:19/02/2021
    Aim: To create a serach box and to display the list of teachers  *@

@using TuitionsOnlineAdmin.UseCases.TeacherBasicInformations.ViewTeacherBasicInformationScreen.Interfaces
@using TuitionsOnlineAdmin.UseCases.PostGraduateCourses.ViewPostGraduateCourseScreen.Interfaces
@using TuitionsOnlineAdmin.UseCases.TeacherPostGraduateCourse_Qualifications.CreateTeacherPostGraduateCourseQualificationScreen.Interfaces
@using TuitionsOnlineAdmin.UseCases.TeacherPostGraduateCourse_Qualifications.EditTeacherPostGraduateCourseQualificationScreen.Interfaces
@using TuitionsOnlineAdmin.UseCases.TeacherPostGraduateCourse_Qualifications.ViewTeacherPostGraduateCourseQualificationScreen.Interfaces
@using TuitionsOnlineAdmin.CoreBusiness

@inject IViewTeacherBasicInformationUseCase diIViewTeacherBasicInformationUseCase
@inject IViewPostGraduateCourseUseCase diIViewPostGraduateCourseUseCase
@inject ICreateTeacherPostGraduateCourseQualificationUseCase diICreateTeacherPostGraduateCourseQualificationUseCase
@inject IEditTeacherPostGraduateCourseQualificationUseCase diIEditTeacherPostGraduateCourseQualificationUseCase
@inject IViewTeacherPostGraduateCourseQualificationUseCase diIViewTeacherPostGraduateCourseQualificationUseCase
@inject BusinessMessage instanceOfBusinessMessage

<div>

    @* To display the success message on click of save when new Graduate course is created *@
    @if (createMessage && resultForCreate == "done")
    {
        <p class="success_message_style">
            Your postgraduate course  has been added successfully !
        </p>
    }
    else
    {
        <p class="success_message_style">
            @resultForCreate
        </p>
    }
</div>

<div>

    @* To display the success message on click of save when Graduate course is updated *@
    @if (updateMessage && resultForUpdate == "done")
    {
        <p class="success_message_style">
            Your postgraduate course  has been removed successfully !
        </p>
    }
    else
    {
        <p class="success_message_style">
            @resultForUpdate
        </p>
    }
</div>

<div>

    @* To display server error message *@
    @if (viewError && @postGraduateCourseList == null)
    {
        <p class="success_message_style">
            @instanceOfBusinessMessage.UNKNOWN_SERVER_ERROR_VIEW_TEACHERPOSTGRADUATECOURSE_QUALIFICATIONS
        </p>
    }
</div>


<DxGridLayout CssClass="mw-1100 dxgridlayout_style" style=" height: auto; margin-bottom: 10px;">
    <Rows>
        <DxGridLayoutRow Height="auto" />
    </Rows>
    <Columns>
        <DxGridLayoutColumn Width="50%" />
        <DxGridLayoutColumn Width="50%" />
    </Columns>
    <Items>
        <DxGridLayoutItem Row="0" Column="0">
            <Template>
                <div class=" dxgridlayoutitem_style">
                    <center><h5>Select Teacher Name</h5></center>

                    <div>

                        <DxTextBox NullText="Search Teachers" SizeMode="SizeMode.Small" style=" width:550px;" TextChanged="@((searchTeacherKeyword) => onChangeTeacherSearchText(searchTeacherKeyword))"> </DxTextBox>


                        <div class="teachersearchbutton_style">

                            <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Search Teacher" SizeMode="SizeMode.Small" Enabled="@enableOrDisableSearchTeacherButton" Click="@getTeacherListOnSearch" CssClass="buttonsize_style" />
                        </div>
                    </div>
                    <br />
                    @if (enableSearchTeacherButton)
                    {
                        <DxDataGrid Data="@teacherDetailsList"
                                    @bind-SingleSelectedDataRow="@onSelectOfTeacher"
                                    CssClass="mw-1100">
                            <DxDataGridSelectionColumn Width="50px"></DxDataGridSelectionColumn>
                            <DxDataGridColumn Field="@nameof(TeacherBasicInformation.Teacher_Name)" Caption="Teacher Name"></DxDataGridColumn>
                            <DxDataGridColumn Field="@nameof(TeacherBasicInformation.Email_Address)" Caption="Teacher Email Address"></DxDataGridColumn>
                        </DxDataGrid>

                        <div class="loadbutton_style">

                            <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Load PostGraduate Course" SizeMode="SizeMode.Small" Enabled="@enableOrDisableLoadPostGraduateCourseButton" Click="@loadPostGraduateCourseQualifications" CssClass="buttonsize_style" />
                        </div>
                    }
                </div>

                <br />

                @*Aim:Search box for post graduate course*@
                @if (enablePostGraduateCourseGridLayout)
                {
                    <div class=" dxgridlayoutitem_style">
                        <center><h5>Select PostGraduate Course</h5></center>

                        <div>
                            <DxTextBox NullText="Search PostGraduate Courses" SizeMode="SizeMode.Small" style=" width:550px;" TextChanged="@((searchPostGraduateCourseKeyword) => onChangePostGradauteCourseSearchText(searchPostGraduateCourseKeyword))"> </DxTextBox>


                            <div class="coursesearchbutton_style">

                                <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Search PostGraduate Course" SizeMode="SizeMode.Small" Enabled="@enableOrDisableSearchPostGraduateCourseButton" Click="@getPostGraduateCourseOnSearch" CssClass="buttonsize_style"/>
                            </div>
                        </div>
                        <br />
                        @if (enableSearchPostGraduateCourseButton)
                        {
                            <DxDataGrid Data="@postGraduateCourseList"
                                        @ref="@postGraduateCourseGrid"
                                        KeyFieldName="@nameof(PostGraduateCourse.PostGraduateCourseId)"
                                        @bind-SingleSelectedDataRow="@onselectofpostgraduatecourse"
                                        CssClass="datagrid-border-radius-top-0 mw-1100">
                                <DxDataGridSelectionColumn></DxDataGridSelectionColumn>
                                <DxDataGridColumn Field="@nameof(PostGraduateCourse.PostGraduateCourseName)" Caption="PostGraduate Course"></DxDataGridColumn>


                            </DxDataGrid>
                            <div class="loadbutton_style">
                                <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Add PostGraduate Course" SizeMode="SizeMode.Small" Click="@AddPostGraduateCourses" CssClass="buttonsize_style" />
                            </div>
                        }
                    </div>
                }
                <br />

            </Template>
        </DxGridLayoutItem>
        @if (enablePostGraduateCourseGridLayout)
        {
            <DxGridLayoutItem Row="1" Column="1">
                <Template>


                    <DxDataGrid Data="@teacherPostGraduateCourseQualificationList"
                                SelectionMode="DataGridSelectionMode.MultipleSelectedDataRows"
                                @bind-MultipleSelectedDataRows="@onSelectOfTeacherPostGraduateCourseQualification">
                        <DxDataGridSelectionColumn></DxDataGridSelectionColumn>

                        <DxDataGridColumn Field="@nameof(TeacherPostGraduateCourse_QualificationWithForeignKeys.TeacherName)" Caption="Teacher Name"></DxDataGridColumn>
                        <DxDataGridColumn Field="@nameof(TeacherPostGraduateCourse_QualificationWithForeignKeys.PostGraduateCourseName)" Caption="PostGraduate Course Name"></DxDataGridColumn>

                    </DxDataGrid>
                    <div class="loadbutton_style">
                        <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Remove PostGraduate Course" SizeMode="SizeMode.Small" Click="@RemovePostGraduateCourse" CssClass="buttonsize_style" />
                    </div>
                </Template>
            </DxGridLayoutItem>
        }
    </Items>
</DxGridLayout>
@code {
    //Variable to hold the success message on create of Graduate Course
    public string resultForCreate;

    //Variable to hold the success message on update of Graduate Course
    public string resultForUpdate;

    //Boolean variable to display the message on create of Graduate Course
    bool createMessage = false;

    //Boolean variable to display the error message if the user is unable to view the data
    bool viewError = false;

    //Boolean variable to display the message on update of Graduate Course
    bool updateMessage = false;

    DxDataGrid<TeacherBasicInformation> teacherGrid;
    DxDataGrid<PostGraduateCourse> postGraduateCourseGrid;
    DxDataGrid<TeacherPostGraduateCourse_Qualification> teacherPostGraduateCourseQualificationGrid;

    //Aim : Used to capture the keyword entered by the user
    public string searchTeacherKeyword = null;

    //Aim : To hold the details of the teacher selected by the user
    TeacherBasicInformation selectedTeacherDetails;

    //Aim : To enable or disable teacher search button
    public bool enableOrDisableSearchTeacherButton = false;

    //Aim : To enable or disable Postgraduate course search button
    public bool enableOrDisableLoadPostGraduateCourseButton = false;

    public bool enablePostGraduateCourseGridLayout = false;

    //Aim : Used to capture the keyword entered by the user
    public bool enableOrDisableSearchPostGraduateCourseButton = false;

    //Aim:To enable Search Teacher table
    public bool enableSearchTeacherButton = false;

    //Aim:To enable search Postgraduate course table
    public bool enableSearchPostGraduateCourseButton = false;

    public bool enableTeacherPostGraduateCourseQualificationGridLayout = false;

    //Aim : Used to capture the keyword entered by the user
    public string searchPostGraduateCourseKeyword;

    public int selectedTeacherId;

    public PostGraduateCourse selectedPostGraduateCourseList;

    public int selectedPostGraduateId;

    int SelectedCount { get; set; }

    int StoredSelectedCount { get; set; }

    int StoredUnselectedCount { get; set; }

    //Aim : To hold the list of teachers /single record of teachers details of type TeacherBasicInformation to display in the data grid.
    IEnumerable<TeacherBasicInformation> teacherDetailsList = Enumerable.Empty<TeacherBasicInformation>();

    //Aim : To hold the list of teachers /single record of PostGraduateCourse details of type PostGraduateCourse to display in the data grid.
    IEnumerable<PostGraduateCourse> postGraduateCourseList = Enumerable.Empty<PostGraduateCourse>();

    //Aim : To hold the list of teachers /single record of TeacherPostGraduateCourse_Qualification details of type TeacherPostGraduateCourse_Qualification to display in the data grid.
    IEnumerable<TeacherPostGraduateCourse_QualificationWithForeignKeys> teacherPostGraduateCourseQualificationList = new List<TeacherPostGraduateCourse_QualificationWithForeignKeys>();

    IEnumerable<TeacherPostGraduateCourse_QualificationWithForeignKeys> selectedTeacherPostGraduateCourseQualifications;

    //Aim : To determine if the user has entered any data in the search text box and to enable or disable the teacher search button
    public void onChangeTeacherSearchText(string searchTeacherText)
    {
        searchTeacherKeyword = searchTeacherText;
        enableOrDisableSearchTeacherButton = true;

    }

    //Aim: To fetch teacher/teachers details on click of teacher search button :
    //IViewTeacherBasicInformationUseCase is used for fetching the teacher basic information list for the searched key.
    public void getTeacherListOnSearch()
    {

        teacherDetailsList = diIViewTeacherBasicInformationUseCase.ViewTeacherBasicInformationList(searchTeacherKeyword);

        enableSearchTeacherButton = true;
    }

    //Aim : To call getTeacherPostGraduateCourseQualifications method and to enable the "Load PostGraduate Course" button.
    public TeacherBasicInformation onSelectOfTeacher
    {
        get { return selectedTeacherDetails; }
        set
        {
            selectedTeacherDetails = value;

            selectedTeacherId = selectedTeacherDetails.TeacherId;

            enableOrDisableLoadPostGraduateCourseButton = true;

            InvokeAsync(StateHasChanged);
        }
    }

    //Aim:
    //1.to enable the Postgraduate course grid.
    //2.to enable the teacher Postgraduate course qualification grid.
    //3.to invoke the method "getTeacherPostGraduateCourseQualifications"

    public void loadPostGraduateCourseQualifications()
    {
        enablePostGraduateCourseGridLayout = true;

        enableTeacherPostGraduateCourseQualificationGridLayout = true;
        getTeacherPostGraduateCourseQualifications();
    }

    //Aim : To determine if the user has entered any data in the Postgraduate course search text box and to enable or disable the Postgraduate course search button

    public void onChangePostGradauteCourseSearchText(string searchPostGraduateCourseText)
    {
        searchPostGraduateCourseKeyword = searchPostGraduateCourseText;
        enableOrDisableSearchPostGraduateCourseButton = true;

    }

    //Aim:
    //1.To fetch  Postgraduate courses(which is matched with the searched criteria) on click of Postgraduate course search button :
    // IViewPostGraduateCourseUseCase is used for fetching the Postgraduate course list for the searched key.
    //2.To invoke a method "getAvailablePostGraduateCourses" for obtaining only the courses that are not already associated with the teacher and display the list.

    public void getPostGraduateCourseOnSearch()
    {
        postGraduateCourseList = diIViewPostGraduateCourseUseCase.ViewPostGraduateCourse(searchPostGraduateCourseKeyword);
        enableSearchPostGraduateCourseButton = true;

    }

    //Aim : To capture the selected Postgraduate course value and to enable the "Add PostGraduate Course" button.
    public PostGraduateCourse onselectofpostgraduatecourse
    {
        get { return selectedPostGraduateCourseList; }
        set
        {
            // Console.WriteLine(selectedPostGraduateCourseList);
            selectedPostGraduateCourseList = value;

            selectedPostGraduateId = selectedPostGraduateCourseList.PostGraduateCourseId;

            InvokeAsync(StateHasChanged);
        }

    }

    //Aim : To fetch teacher Postgraduate course qualifications from TeacherPostGraduateCourseQualification table for the selected teacher.

    public void getTeacherPostGraduateCourseQualifications()
    {

        //teacherPostGraduateCourseQualificationList = diIViewTeacherPostGraduateCourseQualificationUseCase.ViewTeacherPostGraduateCourseQualification(selectedTeacherId);

        teacherPostGraduateCourseQualificationList = diIViewTeacherPostGraduateCourseQualificationUseCase.ViewTeacherPostGraduateCourseQualification(selectedTeacherId);
    }

    //Aim: To save the teacher Postgraduate course qualification record on click of save button.

    public void AddPostGraduateCourses()
    {

        // var addPostGraduateCourse = diICreateTeacherPostGraduateCourseQualificationUseCase.CreateTeacherPostGraduateCourseQualification(selectedTeacherId, selectedPostGraduateId);
        resultForCreate = diICreateTeacherPostGraduateCourseQualificationUseCase.CreateTeacherPostGraduateCourseQualification(selectedTeacherId, selectedPostGraduateId);
        createMessage = true;
        getTeacherPostGraduateCourseQualifications();
    }

    //Aim : To capture the selected teacher Postgraduate course qualification value and to enable the "Remove PostGraduate Course" button.
    IEnumerable<TeacherPostGraduateCourse_QualificationWithForeignKeys> onSelectOfTeacherPostGraduateCourseQualification
    {
        get { return selectedTeacherPostGraduateCourseQualifications; }
        set
        {
            selectedTeacherPostGraduateCourseQualifications = value;

            InvokeAsync(StateHasChanged);
        }
    }

    //Aim: To remove the teacher Postgraduate course qualification record on click of "Remove PostGraduate Course" button.
    public void RemovePostGraduateCourse()
    {
        List<TeacherPostGraduateCourse_QualificationWithForeignKeys> List = selectedTeacherPostGraduateCourseQualifications.ToList();
        // var removePostGraduateCourse = diIEditTeacherPostGraduateCourseQualificationUseCase.EditTeacherPostGraduateCourseQualification(List);
        resultForUpdate = diIEditTeacherPostGraduateCourseQualificationUseCase.EditTeacherPostGraduateCourseQualification(List);
        updateMessage = true;
        getTeacherPostGraduateCourseQualifications();
        InvokeAsync(StateHasChanged);
    }
}
