@* Authors: Shravan A, Bhavya MU, Sneha M , Karan Kumar , Bhargavi S Adiga
     Date: 18-01-2021
    Aim : To create, view ,edit High School Board page *@

@page "/highschoolboard"
@using TuitionsOnlineAdmin.UseCases.HighSchoolBoards.CreateHighSchoolBoardScreen.Interfaces
@using TuitionsOnlineAdmin.UseCases.HighSchoolBoards.ViewHighSchoolBoardScreen.Interfaces
@using TuitionsOnlineAdmin.UseCases.HighSchoolBoards.UpdateHighSchoolBoardScreen.Interface
@using TuitionsOnlineAdmin.CoreBusiness
@inject NavigationManager UriHelper
@inject ICreateHighSchoolBoardUseCase instanceOfICreateHighSchoolBoardUseCase
@inject IViewHighSchoolBoardUseCase instanceOfIViewHighSchoolBoardUseCase
@inject IUpdateHighSchoolBoardUseCase instanceOfIUpdateHighSchoolBoardUseCase
@inject BusinessMessage instanceOfBusinessMessage

    @* this TextBox is used to search the data  *@
    <div>
        <DxTextBox TextChanged="@((searchText) => OnTextChanged(searchText))"
                   ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                   SizeMode="SizeMode.Small"
                   NullText="Search for High School Boards ...."></DxTextBox>
    </div>
    <br />


    <div>
        @* To display the success message on click of save when new High School Board is created *@
        @if (createMessage && resultForCreate == "done")
        {
            <p class="success_message_style">
                Your High School Board "@highSchoolBoardName" has been created successfully !
            </p>
        }
        else
        {
            <p class="success_message_style">
                @resultForCreate
            </p>
        }
    </div>

    @* To display the success message on click of save when High School Board is updated *@
    <div>
        @if (updateMessage && resultForUpdate == "done")
        {
            <p class="success_message_style">
                Your High School Board "@highSchoolBoardName" has been updated successfully !
            </p>
        }
        else
        {
            <p class="success_message_style">
                @resultForUpdate
            </p>
        }
    </div>

    <div>
        @* To display server error message *@
        @if (viewError && highSchoolBoardList == null)
        {
            <p class="success_message_style">
                @instanceOfBusinessMessage.UNKNOWN_SERVER_ERROR_VIEW_HIGHSCHOOLBOARD
            </p>
        }
    </div>


    @*Table is used to display the High School Board data *@
    <DxDataGrid Data="@highSchoolBoardList"
                RowInserting="@((newHighSchoolBoard) => CreateHighSchoolBoard(newHighSchoolBoard))"
                RowUpdating="@((highSchoolBoardToBeUpdated, newValue) => UpdateHighSchoolBoard(highSchoolBoardToBeUpdated, newValue))"
                PageSize="5">
        <DxDataGridColumn Field="@nameof(HighSchoolBoard.HighSchoolBoardName)" Width="300px" Caption="High School Board" />
        <DxDataGridCheckBoxColumn Field="@nameof(HighSchoolBoard.Active)" Width="200px" />
        <DxDataGridCommandColumn Width="200px" DeleteButtonVisible="false" />
    </DxDataGrid>


    @code {

        @* To hold the hold the HighSchoolBoard details*@
        IEnumerable<HighSchoolBoard> highSchoolBoardList = Enumerable.Empty<HighSchoolBoard>();

        @*To hold the search text*@
        String searchkey;

        //Variable to hold the success message on create of High School Board
        public string resultForCreate;

        //Boolean variable to display the message on create of High School Board
        bool createMessage = false;

        //Variable to hold the success message on update of High School Board
        public string resultForUpdate;

        //Boolean variable to display the message on update of High School Board
        bool updateMessage = false;

        //Boolean variable to display the error message if the user is unable to view the data
        bool viewError = false;

        //Variable to hold the High School Board name
        public string highSchoolBoardName;

        @*The init method is to invoke the HighSchoolBoard list when the page is loaded*@
        protected override void OnInitialized()
        {

            @*To invoke the GetHighSchoolBoards() to fetch the HighSchoolBoard list to be displayed*@
            GetHighSchoolBoards(searchkey);

        }

        @*To get HighSchoolBoard list to be displayed in the data grid columns*@
        public void GetHighSchoolBoards(String searchkeyword)
        {
            highSchoolBoardList = instanceOfIViewHighSchoolBoardUseCase.ViewHighSchoolBoard(searchkeyword);
            viewError = true;
        }


        void OnTextChanged(String searchText)
        {
            searchkey = searchText;
            @*To invoke the component to re-render the data*@
            InvokeAsync(StateHasChanged);
            @*The High School Board list should be fetched again to display the newly created High School Board along with the existing the High School Board list *@
            GetHighSchoolBoards(searchkey);
        }

        //create HighSchoolBoard
        @*The CreateHighSchoolBoard() method is responsible for capturing the details enetred by the user and send it to the database.*@
        private async void CreateHighSchoolBoard(Dictionary<string, object> newHighSchoolBoard)
        {
            @* To hold the new HighSchoolBoard to be created *@
            HighSchoolBoard createHighSchoolBoard = new HighSchoolBoard();
            @*The new value comes in the form of key value pair*@
            foreach (var field in newHighSchoolBoard.Keys)
            {
                @*For each incoming key we check and assign the values to newHighSchoolBoard *@
                switch (field)
                {
                    case "HighSchoolBoardName":
                        highSchoolBoardName = createHighSchoolBoard.HighSchoolBoardName = (string)newHighSchoolBoard[field];
                        break;
                    case "Active":
                        createHighSchoolBoard.Active = (bool)newHighSchoolBoard[field];
                        break;
                }
            }

            @*To invoke the method to create new HighSchoolBoard*@
            resultForCreate = instanceOfICreateHighSchoolBoardUseCase.CreateHighSchoolBoard(createHighSchoolBoard);

            createMessage = true;
            @*The StateHasChanged makes sure that the component is notified to re-render the data*@
            await InvokeAsync(StateHasChanged);
            @*The High School Board list should be fetched again to display the newly created HighSchoolBoard along with the existing the High School Board list *@
            GetHighSchoolBoards(searchkey);


            //Used to refresh the razor page
            await Task.Delay(2000);
            //Used to refresh the razor page
            UriHelper.NavigateTo("highschoolboard", forceLoad: true);

        }



        //To take and update the value for  HighSchoolBoard
        private async void UpdateHighSchoolBoard(HighSchoolBoard highSchoolBoardToBeUpdated, Dictionary<string, object> newValue)
        {

            foreach (var highSchoolBoard in newValue.Keys)
            {
                switch (highSchoolBoard)
                {
                    case "HighSchoolBoardName":
                        highSchoolBoardName = highSchoolBoardToBeUpdated.HighSchoolBoardName = (string)newValue[highSchoolBoard];
                        break;
                    case "Active":
                        highSchoolBoardToBeUpdated.Active = (bool)newValue[highSchoolBoard];
                        break;
                }

            }

            @*HighSchoolBoardToBeUpdated this variable holds the updated value and is sent to the database*@
            resultForUpdate = instanceOfIUpdateHighSchoolBoardUseCase.UpdateHighSchoolBoard(highSchoolBoardToBeUpdated);
            updateMessage = true;
            @*The StateHasChanged makes sure that the component is notified to re-render the data*@
            await InvokeAsync(StateHasChanged);
            @*The High School Board list should be fetched again to display the newly created High School Board along with the existing the High School Board list *@
            GetHighSchoolBoards(searchkey);


            //Used to refresh the razor page
            await Task.Delay(2000);
            //Used to refresh the razor page
            UriHelper.NavigateTo("highschoolboard", forceLoad: true);

        }

    }
