@page "/TeacherHighSchoolBoard"
@*Authors: Shravan A, Bhavya MU, Sneha M , Karan Kumar , Bhargavi S Adiga
    Date:19/02/2021
    Aim: To create a serach box and to display the list of teachers  *@

@using TuitionsOnlineAdmin.UseCases.TeacherBasicInformations.ViewTeacherBasicInformationScreen.Interfaces
@using TuitionsOnlineAdmin.UseCases.HighSchoolBoards.ViewHighSchoolBoardScreen.Interfaces
@using TuitionsOnlineAdmin.UseCases.TeacherHighSchoolBoards.CreateTeacherHighSchoolBoardScreen.Interfaces
@using TuitionsOnlineAdmin.UseCases.TeacherHighSchoolBoards.EditTeacherHighSchoolBoardScreen.Interfaces
@using TuitionsOnlineAdmin.UseCases.TeacherHighSchoolBoards.ViewTeacherHighSchoolBoardScreen.Interfaces
@using TuitionsOnlineAdmin.CoreBusiness

@inject IViewTeacherBasicInformationUseCase diIViewTeacherBasicInformationUseCase
@inject IViewHighSchoolBoardUseCase diIViewHighSchoolBoardUseCase
@inject ICreateTeacherHighSchoolBoardUseCase diICreateTeacherHighSchoolBoardUseCase
@inject IEditTeacherHighSchoolBoardUseCase diIEditTeacherHighSchoolBoardUseCase
@inject IViewTeacherHighSchoolBoardUseCase diIViewTeacherHighSchoolBoardUseCase
@inject BusinessMessage instanceOfBusinessMessage


<div>

    @* To display the success message on click of save when new high school board is created *@
    @if (createMessage && resultForCreate == "done")
    {
        <p class="success_message_style">
            Your high school board has been added successfully!
        </p>
    }
    else
    {
        <p class="success_message_style">
            @resultForCreate
        </p>
    }
</div>

<div>

    @* To display the success message on click of save when high school board is updated *@
    @if (updateMessage && resultForUpdate == "done")
    {
        <p class="success_message_style">
            Your high school board has been removed successfully !
        </p>
    }
    else
    {
        <p class="success_message_style">
            @resultForUpdate
        </p>
    }
</div>

<div>

    @* To display server error message *@
    @if (viewError && @highSchoolBoardList == null)
    {
        <p class="success_message_style">
            @instanceOfBusinessMessage.UNKNOWN_SERVER_ERROR_VIEW_TEACHERHIGHSCHOOLBOARD
        </p>
    }


</div>
<DxGridLayout CssClass="mw-1100 dxgridlayout_style" style=" height: auto; margin-bottom: 10px;">
    <Rows>
        <DxGridLayoutRow Height="auto" />
    </Rows>
    <Columns>
        <DxGridLayoutColumn Width="50%" />
        <DxGridLayoutColumn Width="50%" />
    </Columns>
    <Items>
        <DxGridLayoutItem Row="0" Column="0">
            <Template>
                <div class=" dxgridlayoutitem_style">
                    <center><h5>Select Teacher Name</h5></center>

                    <div>

                        <DxTextBox NullText="Search Teachers" SizeMode="SizeMode.Small" style=" width:550px;" TextChanged="@((searchTeacherKeyword) => onChangeTeacherSearchText(searchTeacherKeyword))"> </DxTextBox>


                        <div class="teachersearchbutton_style">

                            <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Search Teacher" SizeMode="SizeMode.Small" Enabled="@enableOrDisableSearchTeacherButton" Click="@getTeacherListOnSearch" />
                        </div>
                    </div>
                    <br />
                    @if (enableSearchTeacherButton)
                    {
                        <DxDataGrid Data="@teacherDetailsList"
                                    @bind-SingleSelectedDataRow="@onSelectOfTeacher"
                                    CssClass="mw-1100">
                            <DxDataGridSelectionColumn Width="50px"></DxDataGridSelectionColumn>
                            <DxDataGridColumn Field="@nameof(TeacherBasicInformation.Teacher_Name)" Caption="Teacher Name"></DxDataGridColumn>
                            <DxDataGridColumn Field="@nameof(TeacherBasicInformation.Email_Address)" Caption="Teacher Email Address"></DxDataGridColumn>
                        </DxDataGrid>

                        <div class="loadbutton_style">

                            <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Load HighSchool Board" SizeMode="SizeMode.Small" Enabled="@enableOrDisableLoadHighSchoolBoardButton" Click="@loadTeacherHighSchoolBoard" />
                        </div>

                    }
                </div>

                <br />
                @if (enableHighSchoolBoardGridLayout)
                {
                    <div class=" dxgridlayoutitem_style">
                        <center><h5>Select HighSchoolBoard</h5></center>

                        <div>
                            <DxTextBox NullText="Search HighSchoolBoard" SizeMode="SizeMode.Small" style=" width:550px;" TextChanged="@((searchHighSchoolBoardKeyword) => onChangeHighSchoolBoardSearchText(searchHighSchoolBoardKeyword))"> </DxTextBox>


                            <div class="highschoolboardsearchbutton_style">

                                <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Search HighSchool Board Name" SizeMode="SizeMode.Small" Enabled="@enableOrDisableSearchHighSchoolBoardButton" Click="@getHighSchoolBoardOnSearch" />
                            </div>
                        </div>

                        @if (enableSearchHighSchoolBoardButton)
                        {

                            <DxDataGrid Data="@highSchoolBoardList"
                                        @ref="@highSchoolBoardGrid"
                                        KeyFieldName="@nameof(HighSchoolBoard.HighSchoolBoardId)"
                                        @bind-SingleSelectedDataRow="@onselectofHighSchoolBoard"
                                        CssClass="datagrid-border-radius-top-0 mw-1100">
                                <DxDataGridSelectionColumn></DxDataGridSelectionColumn>
                                <DxDataGridColumn Field="@nameof(HighSchoolBoard.HighSchoolBoardName)" Caption="HighSchool Board Name"></DxDataGridColumn>


                            </DxDataGrid>

                            <div class="loadbutton_style">
                                <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Add HighSchoolBoard" SizeMode="SizeMode.Small" Click="@AddHighSchoolBoards" />
                            </div>

                        }
                    </div>

                    <br />
                }
            </Template>
        </DxGridLayoutItem>
        @if (enableHighSchoolBoardGridLayout)
        {
            <DxGridLayoutItem Row="1" Column="1">
                <Template>


                    <DxDataGrid Data="@teacherHighSchoolBoardList"
                                SelectionMode="DataGridSelectionMode.MultipleSelectedDataRows"
                                @bind-MultipleSelectedDataRows="@onSelectOfTeacherHighSchoolBoard">
                        <DxDataGridSelectionColumn></DxDataGridSelectionColumn>

                        <DxDataGridColumn Field="@nameof(TeacherHighSchoolBoardWithForeignKeys.TeacherName)" Caption="Teacher Name"></DxDataGridColumn>
                        <DxDataGridColumn Field="@nameof(TeacherHighSchoolBoardWithForeignKeys.HighSchoolBoardName)" Caption="HighSchoolBoard Name"></DxDataGridColumn>

                    </DxDataGrid>
                    <div class="loadbutton_style">
                        <DxButton RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" Text="Remove HighSchoolBoard" SizeMode="SizeMode.Small" Click="@RemoveHighSchoolBoard" />
                    </div>
                </Template>
            </DxGridLayoutItem>
        }
    </Items>
</DxGridLayout>



@code {
    //Variable to hold the success message on create of high School Board
    public string resultForCreate;

    //Variable to hold the success message on update of high school board
    public string resultForUpdate;

    //Boolean variable to display the message on create of high school board
    bool createMessage = false;

    //Boolean variable to display the error message if the user is unable to view the data
    bool viewError = false;

    //Boolean variable to display the message on update of high school board
    bool updateMessage = false;

    DxDataGrid<TeacherBasicInformation> teacherGrid;
    DxDataGrid<HighSchoolBoard> highSchoolBoardGrid;
    DxDataGrid<TeacherHighSchoolBoard> teacherHighSchoolBoardGrid;

    //Aim : Used to capture the keyword entered by the user
    public string searchTeacherKeyword = null;

    //Aim : To hold the details of the teacher selected by the user
    TeacherBasicInformation selectedTeacherDetails;

    //Aim : To enable or disable teacher search button
    public bool enableOrDisableSearchTeacherButton = false;

    //Aim:To enable Search Teacher table
    public bool enableSearchTeacherButton = false;

    public int selectedTeacherId;

    public bool enableOrDisableSearchHighSchoolBoardButton = false;

    public bool enableHighSchoolBoardGridLayout = false;

    public string searchHighSchoolBoardText;

    public bool enableSearchHighSchoolBoardButton = false;

    public bool enableOrDisableLoadHighSchoolBoardButton = false;

    public int selectedHighSchoolBoardId;

    public HighSchoolBoard selectedHighSchoolBoardList;

    public string searchHighSchoolBoardKeyword;

    public bool enableTeacherHighSchoolBoardQualificationGridLayout = false;


    //Aim : To hold the list of teachers /single record of teachers details of type TeacherBasicInformation to display in the data grid.
    IEnumerable<TeacherBasicInformation> teacherDetailsList = Enumerable.Empty<TeacherBasicInformation>();

    //Aim : To hold the list of teachers /single record of HighSchoolBoard details of type HighSchoolBoard to display in the data grid.
    IEnumerable<HighSchoolBoard> highSchoolBoardList = Enumerable.Empty<HighSchoolBoard>();

    //Aim : To hold the list of teachers /single record of TeacherHighSchoolBoard details of type TeacherHighSchoolBoard to display in the data grid.
    IEnumerable<TeacherHighSchoolBoardWithForeignKeys> teacherHighSchoolBoardList = new List<TeacherHighSchoolBoardWithForeignKeys>();

    IEnumerable<TeacherHighSchoolBoardWithForeignKeys> selectedTeacherHighSchoolBoards;

    //Aim : To determine if the user has entered any data in the search text box and to enable or disable the teacher search button
    public void onChangeTeacherSearchText(string searchTeacherText)
    {
        searchTeacherKeyword = searchTeacherText;
        enableOrDisableSearchTeacherButton = true;

    }

    //Aim: To fetch teacher/teachers details on click of teacher search button :
    //IViewTeacherBasicInformationUseCase is used for fetching the teacher basic information list for the searched key.
    public void getTeacherListOnSearch()
    {

        teacherDetailsList = diIViewTeacherBasicInformationUseCase.ViewTeacherBasicInformationList(searchTeacherKeyword);

        enableSearchTeacherButton = true;
    }

    //Aim : To call getTeacherHighSchoolBoards method and to enable the "Load HighSchoolBoard" button.
    public TeacherBasicInformation onSelectOfTeacher
    {
        get { return selectedTeacherDetails; }
        set
        {
            selectedTeacherDetails = value;

            selectedTeacherId = selectedTeacherDetails.TeacherId;
            enableOrDisableLoadHighSchoolBoardButton = true;
            InvokeAsync(StateHasChanged);
        }
    }

    //Aim : To determine if the user has entered any data in the HighSchoolBoard search text box and to enable or disable the HighSchoolBoard search button

    public void onChangeHighSchoolBoardSearchText(string searchHighSchoolBoardText)
    {
        searchHighSchoolBoardKeyword = searchHighSchoolBoardText;
        enableOrDisableSearchHighSchoolBoardButton = true;

    }

    //Aim:
    //1.to enable the HighSchoolBoard grid.
    //2.to enable the teacher HighSchoolBoard grid.
    //3.to invoke the method "getTeacherHighSchoolBoards"

    public void loadTeacherHighSchoolBoard()
    {
        enableHighSchoolBoardGridLayout = true;

        enableTeacherHighSchoolBoardQualificationGridLayout = true;
        getTeacherHighSchoolBoard();

    }

    //Aim: To view teacher high school board
    public void getTeacherHighSchoolBoard()
    {
        teacherHighSchoolBoardList = diIViewTeacherHighSchoolBoardUseCase.ViewTeacherHighSchoolBoard(selectedTeacherId);

    }

    //Aim : To capture the selected HighSchoolBoard value and to enable the "Add HighSchoolBoard" button.
    public HighSchoolBoard onselectofHighSchoolBoard
    {
        get { return selectedHighSchoolBoardList; }
        set
        {

            selectedHighSchoolBoardList = value;

            selectedHighSchoolBoardId = selectedHighSchoolBoardList.HighSchoolBoardId;

            InvokeAsync(StateHasChanged);
        }

    }

    //Aim:
    //1.To fetch  HighSchoolBoard (which is matched with the searched criteria) on click of HighSchoolBoard  search button :
    // IViewHighSchoolBoardUseCase is used for fetching the HighSchoolBoard  list for the searched key.
    //2.To invoke a method IViewHighSchoolBoardUseCase "getAvailableHighSchoolBoards" for obtaining only the high school boards that are not already associated with the teacher and display the list.

    public void getHighSchoolBoardOnSearch()
    {
        highSchoolBoardList = diIViewHighSchoolBoardUseCase.ViewHighSchoolBoard(searchHighSchoolBoardKeyword);
        enableSearchHighSchoolBoardButton = true;

    }

    //Aim: To save the teacher HighSchoolBoard record on click of save button.

    public void AddHighSchoolBoards()
    {

        resultForCreate = diICreateTeacherHighSchoolBoardUseCase.CreateTeacherHighSchoolBoard(selectedTeacherId, selectedHighSchoolBoardId);
        createMessage = true;
        getTeacherHighSchoolBoard();
    }

    //Aim : To capture the selected teacher HighSchoolBoard value and to enable the "Remove HighSchoolBoard" button.
    IEnumerable<TeacherHighSchoolBoardWithForeignKeys> onSelectOfTeacherHighSchoolBoard
    {
        get { return selectedTeacherHighSchoolBoards; }
        set
        {
            selectedTeacherHighSchoolBoards = value;

            InvokeAsync(StateHasChanged);
        }
    }

    //Aim: To remove the teacher HighSchoolBoard record on click of "Remove HighSchoolBoard" button.
    public void RemoveHighSchoolBoard()
    {
        List<TeacherHighSchoolBoardWithForeignKeys> List = selectedTeacherHighSchoolBoards.ToList();
        resultForUpdate = diIEditTeacherHighSchoolBoardUseCase.EditTeacherHighSchoolBoard(List);
        updateMessage = true;
        getTeacherHighSchoolBoard();
    }
}
